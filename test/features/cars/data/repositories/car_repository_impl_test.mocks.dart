// Mocks generated by Mockito 5.4.6 from annotations
// in teste_ws_work_flutter/test/features/cars/data/repositories/car_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:teste_ws_work_flutter/features/cars/data/datasources/car_local_data_source.dart'
    as _i5;
import 'package:teste_ws_work_flutter/features/cars/data/datasources/car_remote_data_source.dart'
    as _i2;
import 'package:teste_ws_work_flutter/features/cars/data/models/car_model.dart'
    as _i4;
import 'package:teste_ws_work_flutter/features/lead/data/models/lead_model.dart'
    as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [CarRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockCarRemoteDataSource extends _i1.Mock
    implements _i2.CarRemoteDataSource {
  MockCarRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.CarModel>> getCars() =>
      (super.noSuchMethod(
            Invocation.method(#getCars, []),
            returnValue: _i3.Future<List<_i4.CarModel>>.value(<_i4.CarModel>[]),
          )
          as _i3.Future<List<_i4.CarModel>>);
}

/// A class which mocks [CarLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockCarLocalDataSource extends _i1.Mock
    implements _i5.CarLocalDataSource {
  MockCarLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> cacheCars(List<_i4.CarModel>? carsToCache) =>
      (super.noSuchMethod(
            Invocation.method(#cacheCars, [carsToCache]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<List<_i4.CarModel>> getLastCars() =>
      (super.noSuchMethod(
            Invocation.method(#getLastCars, []),
            returnValue: _i3.Future<List<_i4.CarModel>>.value(<_i4.CarModel>[]),
          )
          as _i3.Future<List<_i4.CarModel>>);

  @override
  _i3.Future<void> saveLead(_i6.LeadModel? lead) =>
      (super.noSuchMethod(
            Invocation.method(#saveLead, [lead]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<List<_i6.LeadModel>> getLeads() =>
      (super.noSuchMethod(
            Invocation.method(#getLeads, []),
            returnValue: _i3.Future<List<_i6.LeadModel>>.value(
              <_i6.LeadModel>[],
            ),
          )
          as _i3.Future<List<_i6.LeadModel>>);

  @override
  _i3.Future<_i6.LeadModel?> getLeadById(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getLeadById, [id]),
            returnValue: _i3.Future<_i6.LeadModel?>.value(),
          )
          as _i3.Future<_i6.LeadModel?>);

  @override
  _i3.Future<void> deleteLead(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#deleteLead, [id]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<List<_i6.LeadModel>> getUnsentLeads() =>
      (super.noSuchMethod(
            Invocation.method(#getUnsentLeads, []),
            returnValue: _i3.Future<List<_i6.LeadModel>>.value(
              <_i6.LeadModel>[],
            ),
          )
          as _i3.Future<List<_i6.LeadModel>>);

  @override
  _i3.Future<void> markLeadAsSent(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#markLeadAsSent, [id]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);
}
